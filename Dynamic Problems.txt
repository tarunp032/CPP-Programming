1. 1 1 2 3 5 8 13 .....
    a=1 b=1 c =a+b 

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 1, c;
    cout << a << " " << b << " ";
    for (int i = 3; i < 10; i++) {
        c = a + b;
        cout << c << " ";
        a = b;
        b = c;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

2. 1 2 2 4 8 32 ....
   a=1 b=2 c =a*b

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 2, c;
    cout << a << " " << b << " ";
    for (int i = 3; i < 10; i++) {
        c = a * b;
        cout << c << " ";
        a = b;
        b = c;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

3. 1 2 3 6 11 20 ....
     a=1 b=2 c=3  d =a+b+c

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 2, c = 3, d;
    cout << a << " " << b << " " << c << " ";
    for (int i = 4; i < 10; i++) {
        d = a + b + c;
        cout << d << " ";
        a = b;
        b = c;
        c = d;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

4. 1 2 4 8 32 ....
     a=1 b=2 c= power of 2

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int c;
    for (int i = 0; i < 10; i++) {
        c = pow(2, i);
        cout << c << " ";
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

5. 1 2 3 6 18 .....
     a =1 b=2 c=3 d =c*b 

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 2, c = 3, d;
    cout << a << " " << b << " " << c << " ";
    for (int i = 4; i < 10; i++) {
        d = b * c;
        cout << d << " ";
        b = c;
        c = d;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

6. there are four variables a = 1 b= 2 c= 3 c=4
   formulate  1 2 3 4 5 7 9 12 16  and so on

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 2, c = 3, d = 4, e;
    cout << a << " " << b << " " << c << " " << d << " ";
    for (int i = 5; i < 10; i++) {
        e = a + b + c + d;
        cout << e << " ";
        a = b;
        b = c;
        c = d;
        d = e;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

7.1 2 4 7 12 20...
Variables: a=1, b=2, c=a+b+1
Formula: The additon between consecutive terms increases by 1.

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 2, c;
    cout << a << " " << b << " ";
    for (int i = 2; i < 10; i++) {
        c = a + b + 1;
        cout << c << " ";
        a = b;
        b = c;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

8.Modified Tribonacci Sequence
Sequence: 1, 1, 2, 4, 7, 13, ...
Formulation: a = 1, b = 1, c = 2, d = a + b + c
DP Problem: Solve for the nth term where each term is the sum of the previous three terms.

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 1, c = 2, d;
    cout << a << " " << b << " " << c << " ";
    for (int i = 3; i < 10; i++) {
        d = a + b + c;
        cout << d << " ";
        a = b;
        b = c;
        c = d;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

9.Sum of Odd and Even Index Terms
Sequence: 1, 2, 2, 4, 4, 8, 8,16,16, 32, 32 ...
Formulation: a = 1, b = a + even index numbers
DP Problem: Use dynamic programming to calculate the nth term where the pattern is determined by the sum of even and odd indexed numbers.

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int count = 1;
    cout << 1 << " "; // First term
    for (int i = 1; i < 10; i++) {
        if (i % 2 != 0) {
            cout << pow(2, count) << " ";
            count++;
        } else {
            cout << 1 << " "; // Repeat the previous odd term
        }
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

10.Double Product Sequence
Sequence: 1, 3, 6, 36 ...
Formulation: a = 1, b = 3, c = a * b * 2
Problem: Find the nth term where each term is the product of the previous two, doubled.

#include <iostream>
using namespace std;

int main() {
    int a = 1, b = 3, c;
    cout << a << " " << b << " ";
    for (int i = 2; i < 10; i++) {
        c = a * b * 2;
        cout << c << " ";
        a = b;
        b = c;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------

11. Geometric Progression
Sequence: 1, 3, 9, 27, 81, ...
Formulation: a = 1, b = a * 3
Problem: Calculate the nth term where each term is triple the previous.

#include <iostream>
using namespace std;

int main() {
    int a = 1, b;
    cout << a << " ";
    for (int i = 1; i <= 12; i++) {
        b = a * 3;
        cout << b << " ";
        a = b;
    }
    return 0;
}
-----------------------------------------------------------------------------------------------